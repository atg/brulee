-- 100 doors
-- http://rosettacode.org/wiki/100_doors
-- Problem: You have 100 doors in a row that are all initially closed. You make 100 passes by the doors. The first time through, you visit every door and toggle the door (if the door is closed, you open it; if it is open, you close it). The second time you only visit every 2nd door (door #2, #4, #6, ...). The third time, every 3rd door (door #3, #6, #9, ...), etc, until you only visit the 100th door.
-- Question: What state are the doors in after the last pass? Which are open, which are closed?


-- Start with 100 closed doors [Variables in brulee are initialized to 0/nil]
Bool[100] doors

-- Make 100 passes
-- This is a really inefficient way of doing it, but it illustrates the divides operator 
for p in 100
	for i in 100
		-- Check if the current door number divides the current pass number
		if i + 1 divides p + 1
			-- If so, reverse the state of the doors
			doors[i] = !doors[i]

-- Print the results
for i, state in iterate(doors)
	print("door #{i + 1} is #{if state then 'open' else 'closed'}")
